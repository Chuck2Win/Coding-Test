# 디코딩하고 제출하기
# 백준 14500
# 테트로미노
N,M = map(int,input().split())
Map = []
for i in range(N):
    Map.append(list(map(int,input().split())))

# 1
# 2
# 3
# 4
# 5

def count(_):
    if _==0: # ---#
        # case 1 --
        for i in range(N):
            for j in range(M-3):
                answer.append(sum(Map[i][j:j+4]))
        # case 2 |
        for i in range(N-3):
            for j in range(M):
                answer.append(sum([Map[i+s][j] for s in range(4)]))
    elif _==1: # 네모
        for i in range(N-1):
            for j in range(M-1):
                answer.append(sum([Map[i][j],Map[i+1][j],Map[i+1][j+1],Map[i][j+1]]))
    elif _==2:# ㅗ
        # case 1
        for i in range(N-1):
            for j in range(1,M-1):
                answer.append(sum([Map[i][j],Map[i+1][j],Map[i+1][j-1],Map[i+1][j+1]]))
                answer.append(sum([Map[i][j],Map[i][j-1],Map[i][j+1],Map[i+1][j]]))
        # case 2
        for i in range(1,N-1):
            for j in range(M-1):
                answer.append(sum([Map[i][j],Map[i+1][j],Map[i-1][j],Map[i][j+1]]))
                answer.append(sum([Map[i][j],Map[i][j+1],Map[i-1][j+1],Map[i+1][j+1]]))
    elif _==3:# ㄱ_
        # case 1 & case 2
        for i in range(N-1):
            for j in range(1,M-1):
                answer.append(sum([Map[i][j],Map[i][j-1],Map[i+1][j],Map[i+1][j+1]]))
                answer.append(sum([Map[i][j],Map[i][j+1],Map[i+1][j],Map[i+1][j-1]]))
        for i in range(N-1):
            for j in range(1,M-1):
                answer.append(sum([Map[i][j],Map[i-1][j],Map[i][j-1],Map[i+1][j-1]]))
                answer.append(sum([Map[i][j],Map[i+1][j],Map[i][j-1],Map[i-1][j-1]]))
        # case 2
    else:#ㄱ
        for i in range(1,N):
            for j in range(M-2):
                answer.append(sum([Map[i][j],Map[i][j+1],Map[i][j+2],Map[i-1][j+2]]))
                answer.append(sum([Map[i][j],Map[i-1][j],Map[i-1][j+1],Map[i-1][j+2]]))
        for i in range(N-1):
            for j in range(M-2):
                answer.append(sum([Map[i][j],Map[i][j+1],Map[i][j+2],Map[i+1][j+2]]))
                answer.append(sum([Map[i][j],Map[i+1][j],Map[i+1][j+1],Map[i+1][j+2]]))
        for i in range(N-2):
            for j in range(M-1):
                answer.append(sum([Map[i][j],Map[i][j+1],Map[i+1][j],Map[i+2][j]]))
                answer.append(sum([Map[i][j],Map[i+1][j],Map[i+2][j],Map[i+2][j+1]]))
        for i in range(N-2):
            for j in range(1,M):
                answer.append(sum([Map[i][j],Map[i][j-1],Map[i+1][j],Map[i+2][j]]))
                answer.append(sum([Map[i][j],Map[i+1][j],Map[i+2][j],Map[i+2][j-1]]))      
           

answer=[]
for _ in range(5):
    count(_)
print(max(answer))
